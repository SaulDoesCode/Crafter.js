{"name":"SideBar","css":"side-bar, side-bar > *, side-bar > * > * {\n  box-sizing: border-box;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  cursor: default;\n}\nside-bar {\n  position: absolute;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-content: center;\n  align-items: center;\n  width: 200px;\n  height: 100%;\n  background: hsl(0, 0%, 99%);\n  overflow: auto;\n  color: hsl(0, 0%, 44%);\n}\nside-bar[sidebar-direction=\"left\"] {\n  left: 0;\n  box-shadow: 0 0 3px hsla(0, 0%, 12%, 0.5);\n}\nside-bar[sidebar-direction=\"right\"] {\n  right: 0;\n  box-shadow: 0 0 3px hsla(0, 0%, 12%, 0.5);\n}\nsidebar-mainheading {\n  display: inline-flex;\n  position: relative;\n  overflow: hidden;\n  flex: 0 1 auto;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  height: 12mm;\n  width: 100%;\n  color: #fff;\n  background: hsl(0, 0%, 35%);\n  font-size: 1.15em;\n  letter-spacing:1px;\n  font-weight: bold;\n}\nsidebar-heading {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  overflow: hidden;\n  flex: 0 1 auto;\n  align-content: center;\n  align-items: center;\n  justify-content: flex-start;\n  height: 12mm;\n  width: 100%;\n  font-size: 0.95em;\n  padding-left: 5%;\n  padding-right: 8mm;\n  z-index: 5;\n  border-bottom: 1px solid hsl(0, 0%, 90%);\n  background: hsl(0, 0%, 100%);\n}\nsidebar-heading:hover {\n  color: hsl(0, 0%, 50%);\n  background: hsl(0, 0%, 96%);\n  /*box-shadow: 0 0 3px hsla(0, 0%, 16%, 0.25);*/\n  z-index: 6;\n  cursor: pointer;\n}\nsidebar-heading:hover > sidebar-icon {\n  filter: drop-shadow(0 1px 1px hsla(0, 0%, 10%, 0.25));\n  -webkit-filter: drop-shadow(0 1px 1px hsla(0, 0%, 10%, 0.25));\n  -moz-filter: drop-shadow(0 1px 1px hsla(0, 0%, 10%, 0.25));\n}\nsidebar-icon {\n  display: inline-flex;\n  position: absolute;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  pointer-events: none;\n  right: 0;\n  top: 0;\n  cursor: inherit;\n  font-size: 1.1em;\n  height: 100%;\n  width: 10mm;\n  margin: 0 !important;\n}\nsidebar-item {\n  display: flex;\n  flex-flow: row nowrap;\n  flex: 0 1 auto;\n  align-items: center;\n  align-content: center;\n  justify-content: flex-start;\n  text-align: left;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n  background: hsl(0, 0%, 98%);\n  font-size: 0.90em;\n  padding-left: 10%;\n  border-left: 0 solid #656565;\n  width: 100%;\n  height: 8.5mm;\n  transition: all 140ms ease, height 280ms ease-in, opacity 240ms ease-in-out, borderWidth 40ms ease;\n}\nsidebar-accordion {\n  position:relative;\n  display:inline-block;\n  width: 100%;\n  height: 12mm;\n  overflow:hidden;\n  background: transparent;\n  transition: all 200ms ease-in;\n}\nsidebar-accordion[accordion=\"open\"] > sidebar-heading {\n  border-bottom: none;\n  background: hsl(0, 0%, 94%);\n}\nsidebar-accordion[accordion=\"open\"] > sidebar-item {\n  opacity: 1;\n  pointer-events: all;\n}\nsidebar-accordion[accordion=\"closed\"] > sidebar-item {\n  opacity: 0;\n  pointer-events: none;\n}\nsidebar-accordion[accordion=\"open\"] > sidebar-item:first-of-type {\n  box-shadow: inset 0 2px 3px -1px hsla(0, 0%, 20%, 0.24);\n}\nsidebar-accordion[accordion=\"open\"] {\n  box-shadow: inset 0 -2px 3px -1px hsla(0, 0%, 20%, 0.24);\n}\nside-bar > sidebar-item:hover, side-bar > sidebar-accordion > sidebar-item:hover {\n  background: hsl(0, 0%, 92%);\n}\nside-bar[sidebar-direction=\"left\"] > sidebar-item:hover, side-bar[sidebar-direction=\"left\"] > sidebar-accordion > sidebar-item:hover {\n  border-width: 5px;\n}\nsidebar-item:active, sidebar-item[selected] {\n  z-index: 6;\n  border-width: 3px;\n  box-shadow: inset 0 0 6px hsla(0, 0%, 20%, 0.24) !important;\n}\n","js":"\"use strict\";\n\n(function () {\n  Craft.newComponent('side-bar', {\n    created: function created() {\n      var _this = this;\n\n      if (this.hasAttribute('color-accent')) this.color = this.getAttribute('color-accent');\n      if (!this.hasAttribute('sidebar-direction')) this.setAttribute('sidebar-direction', 'left');\n      if (!this.classList.contains('sidebar-hidden')) {\n        this.setAttribute('sidebar-toggle', 'true');\n      } else this.setAttribute('sidebar-toggle', 'false');\n      this.onclick = function (e) {\n        queryEach('side-bar > sidebar-item[selected]', _this, function (el) {\n          if (el !== e.target) el.removeAttribute('selected');\n        });\n        queryEach('sidebar-accordion[accordion=\"open\"]', _this, function (el) {\n          if (el !== e.target && el !== e.target.parentNode) el.setAttribute('accordion', 'closed');\n        });\n      };\n    },\n    setToggleElement: function setToggleElement(SelectorOrNode) {\n      var _this2 = this;\n\n      var Toggle = Craft.resolveQueryOrNode(SelectorOrNode);\n      this.open = true;\n      On('click', Toggle, function (ev) {\n        _this2.open = !_this2.open;\n        _this2.setAttribute('sidebar-toggle', _this2.open.toString());\n      });\n    },\n    toggle: function toggle() {\n      if (is.Undef(this.open)) this.open = true;\n      this.open = !this.open;\n      this.setAttribute('sidebar-toggle', this.open.toString());\n    },\n    attr: function attr(attrName, oldVal, newVal) {\n      if (!this.classList.contains('sidebar-hidden')) {\n        this.setAttribute('sidebar-toggle', 'true');\n      } else this.setAttribute('sidebar-toggle', 'false');\n    }\n  });\n\n  Craft.newComponent('sidebar-mainheading', {\n    extends: 'div'\n  });\n  Craft.newComponent('sidebar-icon', {\n    extends: 'span'\n  });\n\n  Craft.newComponent('sidebar-heading', {\n    created: function created() {\n      var _this3 = this;\n\n      if (this.hasAttribute('ripple')) this.color = this.getAttribute('ripple');\n      if (this.hasAttribute('color-accent')) this.color = this.getAttribute('color-accent');\n      if (query('sidebar-icon', this) !== null) query('sidebar-icon', this).style.color = this.color;\n      setTimeout(function () {\n        if (_this3.textContent.length > 40) _this3.style.height = 'auto';\n      }, 50);\n    },\n    attr: function attr() {\n      if (attrName === 'ripple') this.color = newVal;\n      if (attrName === 'color-accent') this.color = newVal;\n      if (query('sidebar-icon', this) !== null) query('sidebar-icon', this).style.color = this.color;\n    }\n  });\n\n  Craft.newComponent('sidebar-item', {\n    created: function created() {\n      var _this4 = this;\n\n      if (this.hasAttribute('ripple')) this.color = this.getAttribute('ripple');\n      if (this.hasAttribute('color-accent')) this.color = this.getAttribute('color-accent');\n      this.style.borderColor = this.color;\n      if (query('sidebar-icon', this) !== null) query('sidebar-icon', this).style.color = this.color;\n      this.onclick = function (e) {\n        return _this4.hasAttribute('selected') ? _this4.removeAttribute('selected') : setTimeout(function () {\n          return _this4.setAttribute('selected', '');\n        }, 50);\n      };\n    },\n    attr: function attr(attrName, oldVal, newVal) {\n      if (attrName === 'ripple' || attrName === 'color-accent') this.color = newVal;\n      this.style.borderColor = this.color;\n      if (query('sidebar-icon', this) !== null) query('sidebar-icon', this).style.color = this.color;\n    }\n  });\n\n  Craft.newComponent('sidebar-accordion', {\n    created: function created() {\n      var _this5 = this;\n\n      this.open = false;\n      if (this.getAttribute('accordion') === 'open') {\n        this.open = true;\n        this.setAttribute('accordion', 'open');\n      } else {\n        this.open = false;\n        this.setAttribute('accordion', 'closed');\n      }\n      setTimeout(function () {\n        var heading = query('sidebar-heading', _this5);\n        heading.onclick = function (e) {\n          _this5.open = !_this5.open;\n          if (_this5.open === true) {\n            setTimeout(function () {\n              return _this5.setAttribute('accordion', 'open');\n            }, 50);\n            _this5.style.height = queryAll('sidebar-item', _this5).length * 8.5 + 4 + \"mm\";\n          } else {\n            _this5.setAttribute('accordion', 'closed');\n            _this5.style.height = '';\n          }\n        };\n        _this5.onclick = function (e) {\n          return queryEach('sidebar-item[selected]', _this5, function (el) {\n            if (el !== e.target && e.target.tagName !== 'SIDEBAR-HEADING') el.removeAttribute('selected');\n          });\n        };\n        if (heading.hasAttribute('ripple')) _this5.color = heading.getAttribute('ripple');\n        if (heading.hasAttribute('color-accent')) _this5.color = heading.getAttribute('color-accent');\n        queryEach('sidebar-item', _this5, function (item) {\n          if (is.Def(_this5.color)) item.setAttribute('color-accent', _this5.color);\n        });\n      }, 40);\n    },\n    attr: function attr() {\n      var _this6 = this;\n\n      if (this.getAttribute('accordion') === 'open') {\n        this.open = true;\n      } else this.open = false;\n      if (this.open === true) {\n        setTimeout(function () {\n          return _this6.setAttribute('accordion', 'open');\n        }, 50);\n        this.style.height = queryAll('sidebar-item', this).length * 8.5 + 4 + \"mm\";\n      } else {\n        this.setAttribute('accordion', 'closed');\n        this.style.height = '';\n      }\n    }\n  });\n})();"}